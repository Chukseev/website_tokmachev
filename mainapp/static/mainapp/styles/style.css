/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
    padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
    margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(
   h1,
   h2,
   h3,
   h4,
   h5,
   h6,
   p,
   ul,
   ol,
   dl
 ):where([class]) {
    margin-block: 0;
}

:where(dd[class]) {
    margin-left: 0;
}

:where(fieldset[class]) {
    margin-left: 0;
    padding: 0;
    border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
    list-style: none;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
    --paragraphMarginBottom: 24px;

    margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
    margin-bottom: var(--paragraphMarginBottom);
}


/**
  Упрощаем работу с изображениями
 */
img {
    display: block;
    max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
    font: inherit;
}

html {
    /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
    height: 100%;
    /**
      Плавный скролл
     */
    scroll-behavior: smooth;
}

body {
    /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
    min-height: 100%;
    /**
      Унифицированный интерлиньяж
     */
    line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] { fill: currentColor }
svg *[stroke] { stroke: currentColor }

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
    transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
    * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

@font-face {
    font-family: 'FuturaPT';
    src: url('../fonts/FuturaPT-Light.woff2') format('woff2');
    font-weight: 300;
    font-style: normal;
    font-display: swap;
}
@font-face {
    font-family: 'FuturaPT';
    src: url('../fonts/FuturaPTCond-Medium.woff2') format('woff2');
    font-weight: 500;
    font-style: normal;
    font-display: swap;
}
@font-face {
    font-family: 'FuturaPT';
    src: url('../fonts/FuturaPTCond-Bold.woff2') format('woff2');
    font-weight: 700;
    font-style: normal;
    font-display: swap;
}

a {
    text-decoration: none;
}


:root {
    --color-accent-blue: #519ab5;
    --color-accent-green: #4fe4a0;

    --font-family-base: 'FuturaPT', sans-serif;

    --border-radius: 6px;
}

body {
    font-family: var(--font-family-base), serif;
}

body * {
    /*outline: 1px solid red;*/
}

.container {
    margin: 0 auto;
    padding-inline: 80px;
    max-width: 1200px;
}

.text-color-accent {
    color: var(--color-accent-green);
}

.no-wrap {
    white-space: nowrap;
}
button {
    background: var(--color-accent-blue);
    color: white;
    border: none;
    border-radius: var(--border-radius);
    padding-inline: 25px;
    padding-block: 10px;
}

button:hover {
    filter: brightness(1.1);
}

button:active {
    filter: brightness(0.8);
}


form {
    display: flex;
    flex-direction: column;
    gap: 10px;

}

input, textarea {
    border: none;
    border-radius: var(--border-radius);
    box-shadow: 0 0 2px 0 #6a6a6a inset;
    padding-block: 4px;
    padding-inline: 10px;
    font-weight: 300;
}

input:focus, textarea:focus {
    box-shadow: 0 0 4px 0 var(--color-accent-blue) inset;
    border: none;
    outline: none;
}

textarea {
    min-height: 100px;
    resize: none;
}

.form__fields {
}

label {
    font-size: 20px;
}

.form__inputContainer {
    display: flex;
    flex-direction: column;
}


@media (max-width: 768px) {
    .container {
        padding-inline: 10px;
    };
}
